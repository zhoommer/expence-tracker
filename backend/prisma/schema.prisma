// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id     String  @id @default(uuid())
  email  String  @unique @db.VarChar(100)
  hash   String
  hashRt String?

  createdAt         DateTime            @default(now())
  Profile           Profile?
  ExpenceCategories ExpenceCategories[]
  expences          Expence[]
}

model Profile {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  firstname String   @db.VarChar(100)
  lastname  String   @db.VarChar(100)
  phone     String   @db.VarChar(14)
  birthDate DateTime
  gender    Gender
  image     String?  @db.VarChar(255)
}

model Expence {
  id         Int               @id @default(autoincrement())
  name       String            @db.VarChar(255)
  categoryId Int
  category   ExpenceCategories @relation(fields: [categoryId], references: [id])
  amount     Float?
  price      Float

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model ExpenceCategories {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(100)
  spendingLimit Float?
  userId        String?
  user          User?     @relation(fields: [userId], references: [id])
  expences      Expence[]
}
